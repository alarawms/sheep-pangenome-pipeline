/*
========================================================================================
    Stage 3 Module Configuration: Pangenome Graph Construction
========================================================================================
    Module-specific configurations for PGGB graph construction, validation, and analysis
========================================================================================
*/

process {

    withName: PGGB_CONSTRUCT {
        container = 'pangenome/pggb:latest'

        // Resource allocation optimized for sheep pangenome
        cpus          = { Math.min( 32 * task.attempt, params.max_cpus as int ) }
        memory        = 150.GB
        time          = { 24.h * task.attempt }

        // Error handling and retry strategy
        errorStrategy = 'retry'
        maxRetries    = 2

        // Module-specific parameters - using valid PGGB parameters only
        ext.args = ""

        ext.prefix = { "${params.outdir}/03_graph_construction/sheep_pangenome" }

        publishDir = [
            [
                path: "${params.outdir}/03_graph_construction/main_outputs",
                mode: params.publish_dir_mode,
                pattern: "*.{gfa,og,png}"
            ],
            [
                path: "${params.outdir}/03_graph_construction/pggb_outputs",
                mode: params.publish_dir_mode,
                pattern: "pggb_output/*"
            ],
            [
                path: "${params.outdir}/03_graph_construction/logs",
                mode: params.publish_dir_mode,
                pattern: "*.{log,txt}"
            ]
        ]
    }

    withName: GRAPH_VALIDATE {
        container = 'pangenome/odgi:latest'

        // Moderate resources for validation
        cpus          = { 4 * task.attempt }
        memory        = { 32.GB * task.attempt }
        time          = { 2.h * task.attempt }

        errorStrategy = 'retry'
        maxRetries    = 1

        publishDir = [
            [
                path: "${params.outdir}/03_graph_construction/validation",
                mode: params.publish_dir_mode,
                pattern: "*_validation_report.html"
            ],
            [
                path: "${params.outdir}/03_graph_construction/validation",
                mode: params.publish_dir_mode,
                pattern: "*_validation.{json,log}"
            ]
        ]
    }

    withName: GRAPH_STATS {
        container = 'pangenome/odgi:latest'

        // Moderate resources for statistics
        cpus          = { 8 * task.attempt }
        memory        = { 64.GB * task.attempt }
        time          = { 4.h * task.attempt }

        errorStrategy = 'retry'
        maxRetries    = 1

        publishDir = [
            [
                path: "${params.outdir}/03_graph_construction/statistics",
                mode: params.publish_dir_mode,
                pattern: "*_graph_report.html"
            ],
            [
                path: "${params.outdir}/03_graph_construction/statistics",
                mode: params.publish_dir_mode,
                pattern: "*_graph_stats.json"
            ],
            [
                path: "${params.outdir}/03_graph_construction/statistics/detailed",
                mode: params.publish_dir_mode,
                pattern: "*.tsv"
            ]
        ]
    }
}

// Stage 3 specific resource profiles
profiles {

    stage3_large {
        process {
            withName: PGGB_CONSTRUCT {
                cpus   = 32
                memory = 200.GB
                time   = 24.h
            }
        }
    }

    stage3_fast {
        params {
            pggb_segment_length = 10000      // Larger segments for speed
            pggb_block_length = 5000         // Larger blocks for speed
            graph_validation_enabled = false // Skip validation for speed
        }
    }

    stage3_highres {
        params {
            pggb_segment_length = 2000       // Smaller segments for resolution
            pggb_block_length = 1000         // Smaller blocks for resolution
            odgi_viz_width = 3840            // 4K visualization
        }
    }
}